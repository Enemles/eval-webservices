version: '3.8'

services:
  # Infrastructure services
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/${DB_NAME}
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASS}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: http://${MINIO_ENDPOINT}:${MINIO_PORT}
    ports:
      - "${MINIO_PORT}:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    command:
      - server
      - /data
      - --console-address
      - ":9090"
    networks:
      - app-network

  # Initialization services  
  init-keycloak:
    build:
      context: .
      dockerfile: apps/rest/Dockerfile
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - keycloak
    command: ["sh", "-c", "sleep 45 && node /app/init-keycloak.js"]
    networks:
      - app-network
    restart: "no"

  # Application services  
  rest-api:
    build:
      context: .
      dockerfile: apps/rest/Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Database
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      # Keycloak
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # gRPC
      GRPC_URL: grpc-service:5000
      # MinIO - utiliser localhost pour que les URLs générées soient correctes
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      # Other
      NODE_ENV: development
    depends_on:
      - db
      - keycloak
      - grpc-service
      - init-keycloak
    networks:
      - app-network
    extra_hosts:
      - "localhost:host-gateway"

  graphql-api:
    build:
      context: .
      dockerfile: apps/graphql-api/Dockerfile
    ports:
      - "4000:4000"
    environment:
      # Database
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      # Keycloak
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # Other
      PORT: 4000
      NODE_ENV: development
    depends_on:
      - db
      - keycloak
      - init-keycloak
    networks:
      - app-network

  grpc-service:
    build:
      context: .
      dockerfile: apps/grpc/Dockerfile
    ports:
      - "50051:5000"
    environment:
      # Database
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      # gRPC
      GRPC_URL: 0.0.0.0:5000
      # MinIO - utiliser localhost pour que les URLs générées soient correctes
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      # Other
      NODE_ENV: development
    depends_on:
      - db
      - minio
    networks:
      - app-network
    extra_hosts:
      - "localhost:host-gateway"

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge